{
  "_args": [
    [
      {
        "raw": "postcss-cli@^3.2.0",
        "scope": null,
        "escapedName": "postcss-cli",
        "name": "postcss-cli",
        "rawSpec": "^3.2.0",
        "spec": ">=3.2.0 <4.0.0",
        "type": "range"
      },
      "/Users/pasqualevitiello/My Folder/Job/Projects/Gits/system-studio-landing"
    ]
  ],
  "_from": "postcss-cli@>=3.2.0 <4.0.0",
  "_id": "postcss-cli@3.2.0",
  "_inCache": true,
  "_location": "/postcss-cli",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/postcss-cli-3.2.0.tgz_1492812470987_0.9784036681521684"
  },
  "_npmUser": {
    "name": "ryanzim",
    "email": "opensrc@ryanzim.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "array-union": "1.0.2",
    "cliui": "3.2.0",
    "decamelize": "1.2.0",
    "get-caller-file": "1.0.2",
    "glob": "7.1.2",
    "object-assign": "4.1.1",
    "os-locale": "1.4.0",
    "pify": "2.3.0",
    "pinkie-promise": "2.0.1",
    "read-pkg-up": "1.0.1",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "string-width": "1.0.2",
    "which-module": "1.0.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "postcss-cli@^3.2.0",
    "scope": null,
    "escapedName": "postcss-cli",
    "name": "postcss-cli",
    "rawSpec": "^3.2.0",
    "spec": ">=3.2.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-cli/-/postcss-cli-3.2.0.tgz",
  "_shasum": "6128d913e250d07f41834cc76f714882cfa247ab",
  "_shrinkwrap": null,
  "_spec": "postcss-cli@^3.2.0",
  "_where": "/Users/pasqualevitiello/My Folder/Job/Projects/Gits/system-studio-landing",
  "authors": [
    {
      "name": "Michael Ciniawky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "Ryan Zimmermann",
      "email": "opensrc@ryanzim.com"
    }
  ],
  "bin": {
    "postcss": "./bin/postcss"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-cli/issues"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "chokidar": "^1.6.1",
    "dependency-graph": "^0.5.0",
    "fs-promise": "^2.0.2",
    "get-stdin": "^5.0.1",
    "globby": "^6.1.0",
    "ora": "^1.1.0",
    "postcss": "^5.2.16",
    "postcss-load-config": "^1.1.0",
    "postcss-reporter": "^3.0.0",
    "read-cache": "^1.0.0",
    "yargs": "^7.0.2"
  },
  "description": "CLI for PostCSS",
  "devDependencies": {
    "ava": "^0.18.2",
    "coveralls": "^2.12.0",
    "nyc": "^10.1.2",
    "postcss-import": "^9.1.0",
    "standard": "^9.0.1",
    "sugarss": "^0.2.0",
    "uuid": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "6128d913e250d07f41834cc76f714882cfa247ab",
    "tarball": "https://registry.npmjs.org/postcss-cli/-/postcss-cli-3.2.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "bin",
    "index.js",
    "lib"
  ],
  "gitHead": "1dac9bc5dd75488197fde1a83909a907e20cf588",
  "homepage": "https://github.com/postcss/postcss-cli#readme",
  "keywords": [
    "cli",
    "postcss",
    "postcss-runner"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    },
    {
      "name": "pirxpilot",
      "email": "pirxpilot@furkot.com"
    },
    {
      "name": "ryanzim",
      "email": "opensrc@ryanzim.com"
    },
    {
      "name": "watilde",
      "email": "daijiro.wachi@gmail.com"
    }
  ],
  "name": "postcss-cli",
  "optionalDependencies": {},
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![code style][style]][style-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"100\" height=\"100\" title=\"CLI\" src=\"http://postcss.github.io/postcss-cli/logo.svg\">\n  <a href=\"https://github.com/postcss/postcss\">\n    <img width=\"110\" height=\"110\" title=\"PostCSS\" src=\"http://postcss.github.io/postcss/logo.svg\" hspace=\"10\">\n  </a>\n  <h1>PostCSS CLI</h1>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -g|-D postcss-cli\n```\n\n<h2 align=\"center\">Usage</h2>\n\n```bash\npostcss [input.css] [OPTIONS] [-o|--output output.css] [-w|--watch]\n```\n\n> ⚠️  If there are multiple input files, the --dir or --replace option must be passed.\n\n```bash\ncat input.css | postcss [OPTIONS] > output.css\n```\n\n> ⚠️  If no input files are passed, it reads from stdin. If neither -o, --dir, or\n--replace is passed, it writes to stdout.\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:---|:--:|:-----:|:----------|\n|`-d, --dir`|`{String}`|`undefined`|Output Directory|\n|`-b, --base`|`{String}`|`undefined`|Use together with `--dir` for keeping directory structure.|\n|`-x, --ext`|`{String}`|`extname(output)`|Output File Extension|\n|`-o, --output`|`{String}`|`undefined`|Output File|\n|`-r, --replace`|`{String}`|`undefined`|Replace Input <=> Output|\n|`-p, --parser`|`{String}`|`undefined`|Custom PostCSS Parser|\n|`-s, --syntax`|`{String}`|`undefined`|Custom PostCSS Syntax|\n|`-t, --stringifier`|`{String}`|`undefined`|Custom PostCSS Stringifier|\n|`-w, --watch`|`{Boolean}`|`false`|Enable Watch Mode|\n|`--poll`|`{Boolean}`|`false`|Use polling for file watching|\n|`-u, --use`|`{Array}`|`[]`|PostCSS Plugins|\n|`-m, --map`|`{Boolean}`|`{ inline: true }`|External Sourcemaps|\n|`--no-map`|`{Boolean}`|`false`|Disable Sourcemaps|\n|`-e, --env`|`{String}`|`process.env.NODE_ENV`|Sets `$NODE_ENV`|\n|`-c, --config`|`{String}`|`dirname(file)`|PostCSS Config Path `postcss.config.js`|\n|`-h, --help`|`{Boolean}`|`false`|CLI Help|\n|`-v, --version`|`{Boolean}`|`false`|CLI Version|\n\n\n> ℹ️  More details on custom parsers, stringifiers and syntaxes, can be found [here](https://github.com/postcss/postcss#syntaxes).\n\n### [Config](https://github.com/michael-ciniawsky/postcss-load-config)\n\nIf you need to pass options to your plugins, or have a long plugin chain, you'll want to use a configuration file.\n\n**postcss.config.js**\n```js\nmodule.exports = {\n  parser: 'sugarss',\n  plugins: [\n    require('postcss-import')({...options}),\n    require('postcss-url')({ url: 'copy', useHash: true })\n  ]\n}\n```\n\nNote that you **can not** set the `from` or `to` options for postcss in the config file. They are set automatically based on the CLI arguments.\n\n### Context\n\nFor more advanced usage it's recommend to to use a function in `postcss.config.js`, this gives you access to the CLI context to dynamically apply options and plugins **per file**\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|`env`|`{String}`|`'development'`|process.env.NODE_ENV|\n|`file`|`{Object}`|`dirname, basename, extname`|File|\n|`options`|`{Object}`|`map, parser, syntax, stringifier`|PostCSS Options|\n\n**postcss.config.js**\n```js\nmodule.exports = (ctx) => ({\n  map: ctx.options.map,\n  parser: ctx.file.extname === '.sss' ? 'sugarss' : false,\n  plugins: {\n    'postcss-import': { root: ctx.file.dirname }),\n    'cssnano': ctx.env === 'production' ? {} : false\n  }\n})\n```\n\n> ⚠️  If you want to set options via CLI, it's mandatory to reference `ctx.options` in `postcss.config.js`\n\n\n```bash\npostcss input.sss -p sugarss -o output.css -m\n```\n\n**postcss.config.js**\n```js\nmodule.exports = (ctx) => ({\n  map: ctx.options.map,\n  parser: ctx.options.parser,\n  plugins: {\n    'postcss-import': { root: ctx.file.dirname },\n    'cssnano': ctx.env === 'production' ? {} : false\n  }\n})\n```\n\n\n[npm]: https://img.shields.io/npm/v/postcss-cli.svg\n[npm-url]: https://npmjs.com/package/postcss-cli\n\n[node]: https://img.shields.io/node/v/postcss-cli.svg\n[node-url]: https://nodejs.org/\n\n[deps]: https://img.shields.io/gemnasium/postcss/postcss-cli.svg\n[deps-url]: https://gemnasium.com/postcss/postcss-cli\n\n[tests]: http://img.shields.io/travis/postcss/postcss-cli/master.svg\n[tests-url]: https://travis-ci.org/postcss/postcss-cli\n\n[style]: https://img.shields.io/badge/code%20style-standard-yellow.svg\n[style-url]: http://standardjs.com/\n\n[cover]: https://img.shields.io/coveralls/postcss/postcss-cli/master.svg\n[cover-url]: https://coveralls.io/github/postcss/postcss-cli\n\n[chat]: https://img.shields.io/gitter/room/postcss/postcss.svg\n[chat-url]: https://gitter.im/postcss/postcss\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-cli.git"
  },
  "scripts": {
    "clean": "node test/helpers/clean.js",
    "lint": "standard",
    "pretest": "npm run clean && npm run lint",
    "test": "nyc ava -v"
  },
  "version": "3.2.0"
}
